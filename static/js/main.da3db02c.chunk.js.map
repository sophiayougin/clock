{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","getBreakLength","button","state","breakLength","sessionLength","setState","minute","startSession","undefined","interval","setInterval","parseInt","second","isBreak","isRunning","clearInterval","toString","endSession","clear","inputStyle","borderStyle","height","width","display","flexDirection","justifyContent","alignItems","marginLeft","marginRight","borderRadius","borderColor","this","console","log","className","name","disabled","onClick","e","target","style","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da3db02c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      minute: 25,\n      second: '00',\n      isBreak: false,\n      isRunning: false \n    };\n  }\n  getBreakLength = (button) =>{\n    const  { breakLength, sessionLength } = this.state;\n      switch(button){\n        case 'break-up':\n          if(breakLength < 60){\n            this.setState({\n              breakLength : breakLength + 1\n            });\n          }\n          break;\n        case 'break-down':\n          if(this.state.breakLength > 0){\n            this.setState({\n              breakLength : breakLength -  1\n            });\n          }\n          break;\n        case 'session-up':\n          if(sessionLength < 60){\n            this.setState({\n              sessionLength: sessionLength + 1,\n              minute: sessionLength + 1\n            });\n           }\n           break;\n        case 'session-down':  \n          if(sessionLength > 0){\n            this.setState({\n              sessionLength: sessionLength - 1,\n              minute: sessionLength - 1\n            });\n          }\n          break;\n        default:\n          break;  \n      }\n    }\n  startSession = () =>{\n    if(this.interval === undefined){\n      this.interval = setInterval(()=> {\n        if(parseInt(this.state.second) === 0){\n          if(this.state.minute === 0){\n            if(this.state.breakLength > 0 && !this.state.isBreak){\n              this.setState({\n                minute: this.state.breakLength,\n                isBreak: true,\n                isRunning: true\n              })\n            }else if(this.state.isBreak){\n              clearInterval(this.interval);\n              this.interval = undefined;\n              this.setState({\n                isRunning: false\n              });\n            }\n            \n          }else{\n            this.setState({\n              second: '59',\n              minute: this.state.minute - 1,\n              isRunning: true\n            });\n          }\n        }else{\n          this.setState({\n          second: parseInt(this.state.second) - 1 < 10 ?\n                  '0'+(parseInt(this.state.second) - 1).toString()\n                  :parseInt(this.state.second) - 1,\n          isRunning: true\n        });\n      }\n    },1000);\n    }\n  }\n    endSession = () =>{\n      clearInterval(this.interval);\n      this.interval = undefined;\n      this.setState({\n        isRunning: false\n      })\n    }\n    clear = () =>{\n      clearInterval(this.interval);\n      this.interval = undefined;\n      this.setState({\n        breakLength: 5,\n        sessionLength: 25,\n        minute: 25,\n        second: '00',\n        isBreak: false,\n        isRunning: false\n      });\n    }\n  render(){\n    const inputStyle = {\n      borderStyle: 'solid',\n      height: '15em',\n      width: '15em',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderRadius: '50%',\n      borderColor: 'green'\n    }\n    if(this.state.isBreak){\n      inputStyle.borderColor = 'red';\n    }\n    console.log(this.interval);\n    return(\n      <div className='container'>\n        <h1 className='heading'>25 + 5 Clock</h1>\n        <div className='top-container'>\n          <div className='p'>\n            <h3 className='sub-heading'>Break Length</h3>\n            <div className='s'>\n              <button name='break-down'\n                      className='arrow'\n                      disabled={this.state.isRunning === true}\n                      onClick={e=>this.getBreakLength(e.target.name)}>-\n              </button>\n              <h4>{this.state.breakLength}</h4>         \n              <button name='break-up'\n                      className='arrow'\n                      disabled={this.state.isRunning === true}\n                      onClick={e=>this.getBreakLength(e.target.name)}>+\n              </button>\n            </div>\n          </div>\n          <div className='p'>\n          <h3 className='sub-heading'>Session Length</h3>\n          <div className='s'>\n            <button name='session-down'\n                    className='arrow'\n                    disabled={this.state.isRunning === true}\n                    onClick={e=>this.getBreakLength(e.target.name)}>-\n            </button>\n            <h4>{this.state.sessionLength}</h4>\n            <button name='session-up'\n                    className='arrow'\n                    disabled={this.state.isRunning === true} \n                    onClick={e=>this.getBreakLength(e.target.name)}>+\n            </button>\n          </div>\n          </div>\n        </div>\n        <div  style={inputStyle}>\n        <h1 className='time'>{this.state.minute}:</h1>\n        <h1 className='time'>{this.state.second}</h1>\n        </div>\n        <div className='bottom-container'>\n          <button className='timer-control' onClick={this.state.isRunning? this.endSession : this.startSession}>START/STOP</button>\n          <button className='timer-control' onClick={this.clear}>RESET</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}